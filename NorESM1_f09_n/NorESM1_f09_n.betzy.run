#!/bin/csh 
#===============================================================================
#  This is a CCSM batch job script for betzy
#===============================================================================

#SBATCH --account=nn9039k
#SBATCH --job-name=NorESM1_f09_n
#SBATCH --time=12:00:00
#SBATCH --nodes=4
#SBATCH --ntasks=512
#SBATCH --error=r_NorESM1_f09_n.err
#SBATCH --output=r_NorESM1_f09_n.out
#SBATCH --exclusive 
# ---------------------------------------- 
# PE LAYOUT: 
#   total number of tasks  = 512 
#   maximum threads per task = 1 
#   cpl ntasks=512  nthreads=1 rootpe=0 
#   cam ntasks=512  nthreads=1 rootpe=0 
#   clm ntasks=512  nthreads=1 rootpe=0 
#   cice ntasks=512  nthreads=1 rootpe=0 
#   docn ntasks=512  nthreads=1 rootpe=0 
#   sglc ntasks=512  nthreads=1 rootpe=0 
#   
#   total number of hw pes = 512 
#     cpl hw pe range ~ from 0 to 511 
#     cam hw pe range ~ from 0 to 511 
#     clm hw pe range ~ from 0 to 511 
#     cice hw pe range ~ from 0 to 511 
#     docn hw pe range ~ from 0 to 511 
#     sglc hw pe range ~ from 0 to 511 
# ---------------------------------------- 
#-----------------------------------------------------------------------
# Determine necessary environment variables
#-----------------------------------------------------------------------

cd /cluster/home/earnest/models/NorCPM/cases/NorESM1_f09_n

./Tools/ccsm_check_lockedfiles || exit -1
source ./Tools/ccsm_getenv || exit -2

if ($BUILD_COMPLETE != "TRUE") then
  echo "BUILD_COMPLETE is not TRUE"
  echo "Please rebuild the model interactively via"
  echo "   ./${CASE}.${MACH}.build"
  exit -2
endif

setenv LBQUERY  FALSE
setenv LBSUBMIT TRUE

#---------------------------------------------------------------------
# Restart loop without resubmition of the script
#---------------------------------------------------------------------
setenv RESUBMITNOW "FALSE"
@ runnumtot = $RESTART + 1
@ runnum = 0
while ($runnum < $runnumtot )
  @ runnum = $runnum + 1
  if ($runnum == $runnumtot) then
    setenv RESUBMITNOW "TRUE"
  endif
  echo Run number $runnum of $runnumtot

#-----------------------------------------------------------------------
# Determine time-stamp/file-ID string
# Clean up previous run timing files
#-----------------------------------------------------------------------

  setenv LID "`date +%y%m%d-%H%M%S`"
  env | egrep '(MP_|LOADL|XLS|FPE|DSM|OMP|MPC)' # document env vars

# -------------------------------------------------------------------------
# Update env variables
# -------------------------------------------------------------------------

  cd $CASEROOT
  source $CASETOOLS/ccsm_getenv || exit -3

# -------------------------------------------------------------------------
# Build the namelists and check prestage
# -------------------------------------------------------------------------

  cd $CASEROOT
  source $CASETOOLS/ccsm_buildnml.csh || exit -3
  cd $CASEROOT
  source $CASETOOLS/ccsm_prestage.csh || exit -3

# -------------------------------------------------------------------------
# Create and cleanup the timing directories
# -------------------------------------------------------------------------

  if (-d $RUNDIR/timing) rm -r -f $RUNDIR/timing
  mkdir $RUNDIR/timing
  mkdir $RUNDIR/timing/checkpoints

  set sdate = `date +"%Y-%m-%d %H:%M:%S"`
  echo "run started $sdate" >>& $CASEROOT/CaseStatus

# -------------------------------------------------------------------------
# Run the model
# -------------------------------------------------------------------------

cd $RUNDIR
echo "`date` -- CSM EXECUTION BEGINS HERE" 

#setenv OMP_NUM_THREADS 1
#setenv SLURM_MEM_PER_CPU 1920
setenv I_MPI_FABRICS shm:dapl
setenv I_MPI_EXTRA_FILESYSTEM on
setenv I_MPI_EXTRA_FILESYSTEM_LIST lustre

if ($USE_MPISERIAL == "FALSE") then
   srun -n 512 --exclusive ./ccsm.exe >&! ccsm.log.$LID
else
         ./ccsm.exe >&! ccsm.log.$LID
endif
wait

echo "`date` -- CSM EXECUTION HAS FINISHED" 


  cd $CASEROOT
  ./Tools/ccsm_postrun.csh || exit 1

end  # End of restart loop

